{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "intellipat-adf0"
		},
		"ls_intellipatraining_mysqlserverdb_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'ls_intellipatraining_mysqlserverdb'"
		},
		"ls_intellipatraining_sqlserversourcedb_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'ls_intellipatraining_sqlserversourcedb'"
		},
		"ls_intelllipathtraining_intellipatstorageaccount_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_intelllipathtraining_intellipatstorageaccount'"
		},
		"ls_intellipatraining_mysqlserverdb_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "myazuredbserver0.database.windows.net"
		},
		"ls_intellipatraining_mysqlserverdb_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "mysqlserverdb"
		},
		"ls_intellipatraining_mysqlserverdb_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "mayur"
		},
		"ls_intellipatraining_sqlserversourcedb_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "myazuredbserver0.database.windows.net"
		},
		"ls_intellipatraining_sqlserversourcedb_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "sqlserversourcedb"
		},
		"ls_intellipatraining_sqlserversourcedb_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "mayur"
		},
		"ls_intelllipathtraining_intellipatstorageaccount_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://intellipatstorageaccount.dfs.core.windows.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/PL_Netflix')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Netflix Data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_netflix_data_source_file_dynamic",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_netflix_data_target",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"FileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-09-18T05:15:12Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_netflix_data_source_file_dynamic')]",
				"[concat(variables('factoryId'), '/datasets/ds_netflix_data_target')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Netflix_Copy')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Netflix Data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_netflix_data_source",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_netflix_data_target",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-09-18T04:58:38Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_netflix_data_source')]",
				"[concat(variables('factoryId'), '/datasets/ds_netflix_data_target')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Netflix_If_Not_Exists')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Check File Existence",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_netflix_data_target_file_dynamic",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "If Not Exists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Check File Existence",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(activity('Check File Existence').output.exists)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Copy Netflix Data_copy1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_netflix_data_source_file_dynamic",
											"type": "DatasetReference",
											"parameters": {
												"FileName": {
													"value": "@pipeline().parameters.FileName",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_netflix_data_target",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"FileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-09-18T05:56:57Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_netflix_data_target_file_dynamic')]",
				"[concat(variables('factoryId'), '/datasets/ds_netflix_data_source_file_dynamic')]",
				"[concat(variables('factoryId'), '/datasets/ds_netflix_data_target')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/call_dataflow_pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Call dataflow flow",
						"description": "This dataflow pipeline was created to establish relationship between district, and accounts table.",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_district",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"district": {},
									"account": {},
									"sinkmetricoutput": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "dataflow"
				},
				"annotations": [],
				"lastPublishTime": "2025-09-19T11:57:14Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_district')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "lkp_newwatermark",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT MAX(modifieddate) AS watermarkvalue FROM [SalesLT].[SalesOrderDetail]",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_sqlserver_source_db",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "sql_server_pipeline"
				},
				"annotations": [],
				"lastPublishTime": "2025-09-19T06:01:41Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_sqlserver_source_db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_intellipatstorageaccount_account')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_intelllipathtraining_intellipatstorageaccount",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "dataflow"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "account.csv",
						"folderPath": "banking_data",
						"fileSystem": "source"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "account_id",
						"type": "String"
					},
					{
						"name": "district_id",
						"type": "String"
					},
					{
						"name": "frequency",
						"type": "String"
					},
					{
						"name": "date",
						"type": "String"
					},
					{
						"name": "Account_type",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_intelllipathtraining_intellipatstorageaccount')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_intellipatstorageaccount_district')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_intelllipathtraining_intellipatstorageaccount",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "dataflow"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "district.csv",
						"folderPath": "banking_data",
						"fileSystem": "source"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "A1",
						"type": "String"
					},
					{
						"name": "A2",
						"type": "String"
					},
					{
						"name": "A3",
						"type": "String"
					},
					{
						"name": "A4",
						"type": "String"
					},
					{
						"name": "A5",
						"type": "String"
					},
					{
						"name": "A6",
						"type": "String"
					},
					{
						"name": "A7",
						"type": "String"
					},
					{
						"name": "A8",
						"type": "String"
					},
					{
						"name": "A9",
						"type": "String"
					},
					{
						"name": "A10",
						"type": "String"
					},
					{
						"name": "A11",
						"type": "String"
					},
					{
						"name": "A12",
						"type": "String"
					},
					{
						"name": "A13",
						"type": "String"
					},
					{
						"name": "A14",
						"type": "String"
					},
					{
						"name": "A15",
						"type": "String"
					},
					{
						"name": "A16",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_intelllipathtraining_intellipatstorageaccount')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_intellipatstorageaccount_target_bankingDataDataFlowOuput')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_intelllipathtraining_intellipatstorageaccount",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "banking_data_dataflow_output",
						"fileSystem": "target"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_intelllipathtraining_intellipatstorageaccount')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_netflix_data_source')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_intelllipathtraining_intellipatstorageaccount",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "netflix_dataset.csv",
						"fileSystem": "source"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Show_Id",
						"type": "String"
					},
					{
						"name": "Category",
						"type": "String"
					},
					{
						"name": "Title",
						"type": "String"
					},
					{
						"name": "Director",
						"type": "String"
					},
					{
						"name": "Cast",
						"type": "String"
					},
					{
						"name": "Country",
						"type": "String"
					},
					{
						"name": "Release_Date",
						"type": "String"
					},
					{
						"name": "Rating",
						"type": "String"
					},
					{
						"name": "Duration",
						"type": "String"
					},
					{
						"name": "Type",
						"type": "String"
					},
					{
						"name": "Description",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_intelllipathtraining_intellipatstorageaccount')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_netflix_data_source_file_dynamic')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_intelllipathtraining_intellipatstorageaccount",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"fileSystem": "source"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Show_Id",
						"type": "String"
					},
					{
						"name": "Category",
						"type": "String"
					},
					{
						"name": "Title",
						"type": "String"
					},
					{
						"name": "Director",
						"type": "String"
					},
					{
						"name": "Cast",
						"type": "String"
					},
					{
						"name": "Country",
						"type": "String"
					},
					{
						"name": "Release_Date",
						"type": "String"
					},
					{
						"name": "Rating",
						"type": "String"
					},
					{
						"name": "Duration",
						"type": "String"
					},
					{
						"name": "Type",
						"type": "String"
					},
					{
						"name": "Description",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_intelllipathtraining_intellipatstorageaccount')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_netflix_data_target')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_intelllipathtraining_intellipatstorageaccount",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "target"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_intelllipathtraining_intellipatstorageaccount')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_netflix_data_target_file_dynamic')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_intelllipathtraining_intellipatstorageaccount",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"fileSystem": "target"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_intelllipathtraining_intellipatstorageaccount')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sqlserver_source_db')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_intellipatraining_sqlserversourcedb",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "sql_server"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "SalesOrderID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SalesOrderDetailID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "OrderQty",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "ProductID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "UnitPrice",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "UnitPriceDiscount",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "LineTotal",
						"type": "decimal",
						"precision": 38,
						"scale": 6
					},
					{
						"name": "rowguid",
						"type": "uniqueidentifier"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "SalesLT",
					"table": "SalesOrderDetail"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_intellipatraining_sqlserversourcedb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sqlserver_target_db')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_intellipatraining_mysqlserverdb",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "sql_server"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "salesorderid",
						"type": "int",
						"precision": 10
					},
					{
						"name": "salesorderdetailid",
						"type": "int",
						"precision": 10
					},
					{
						"name": "orderqty",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "productid",
						"type": "int",
						"precision": 10
					},
					{
						"name": "unitprice",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "unitpricediscount",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "linetotal",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "rowguide",
						"type": "uniqueidentifier"
					},
					{
						"name": "modifieddate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "salesorderdetail"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_intellipatraining_mysqlserverdb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sqlserver_watermarktable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_intellipatraining_mysqlserverdb",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "sql_server"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "tableName",
						"type": "varchar"
					},
					{
						"name": "watermarkvalue",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "watermarktable"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_intellipatraining_mysqlserverdb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_intellipatraining_mysqlserverdb')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('ls_intellipatraining_mysqlserverdb_properties_typeProperties_server')]",
					"database": "[parameters('ls_intellipatraining_mysqlserverdb_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('ls_intellipatraining_mysqlserverdb_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('ls_intellipatraining_mysqlserverdb_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_intellipatraining_sqlserversourcedb')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('ls_intellipatraining_sqlserversourcedb_properties_typeProperties_server')]",
					"database": "[parameters('ls_intellipatraining_sqlserversourcedb_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('ls_intellipatraining_sqlserversourcedb_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('ls_intellipatraining_sqlserversourcedb_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_intelllipathtraining_intellipatstorageaccount')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_intelllipathtraining_intellipatstorageaccount_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_intelllipathtraining_intellipatstorageaccount_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_district')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_intellipatstorageaccount_district",
								"type": "DatasetReference"
							},
							"name": "district"
						},
						{
							"dataset": {
								"referenceName": "ds_intellipatstorageaccount_account",
								"type": "DatasetReference"
							},
							"name": "account"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_intellipatstorageaccount_target_bankingDataDataFlowOuput",
								"type": "DatasetReference"
							},
							"name": "sinkmetricoutput"
						}
					],
					"transformations": [
						{
							"name": "districtselectedfield"
						},
						{
							"name": "accountselectedfield"
						},
						{
							"name": "joinstream"
						},
						{
							"name": "select1"
						},
						{
							"name": "metrics"
						}
					],
					"scriptLines": [
						"source(output(",
						"          A1 as integer,",
						"          A2 as string,",
						"          A3 as string,",
						"          A4 as string,",
						"          A5 as string,",
						"          A6 as string,",
						"          A7 as string,",
						"          A8 as string,",
						"          A9 as string,",
						"          A10 as string,",
						"          A11 as string,",
						"          A12 as string,",
						"          A13 as string,",
						"          A14 as string,",
						"          A15 as string,",
						"          A16 as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> district",
						"source(output(",
						"          account_id as integer,",
						"          district_id as integer,",
						"          frequency as string,",
						"          date as string,",
						"          Account_type as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> account",
						"district select(mapColumn(",
						"          district_id = A1,",
						"          district_name = A2,",
						"          region = A3",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> districtselectedfield",
						"account select(mapColumn(",
						"          account_id,",
						"          district_id,",
						"          frequency,",
						"          Account_type",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> accountselectedfield",
						"districtselectedfield, accountselectedfield join(districtselectedfield@district_id == accountselectedfield@district_id,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> joinstream",
						"joinstream select(mapColumn(",
						"          district_id = districtselectedfield@district_id,",
						"          district_name,",
						"          region,",
						"          account_id,",
						"          frequency,",
						"          Account_type",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"joinstream aggregate(groupBy(Account_type),",
						"     total_count = count({account_id})) ~> metrics",
						"metrics sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sinkmetricoutput"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_intellipatstorageaccount_district')]",
				"[concat(variables('factoryId'), '/datasets/ds_intellipatstorageaccount_account')]",
				"[concat(variables('factoryId'), '/datasets/ds_intellipatstorageaccount_target_bankingDataDataFlowOuput')]"
			]
		}
	]
}